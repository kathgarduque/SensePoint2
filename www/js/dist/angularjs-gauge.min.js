/*!
 * @license angularjs-gauge - A Gauge directive for Angular 1.x apps and dashboards
 * 
 * version: 1.4.0
 *
 * Copyright (c) 2016-2017 Ashish Chopra
 * Released under the MIT license
 * https://github.com/ashish-chopra/angular-gauge/blob/master/LICENSE
 */
!function(t){"use strict";function e(){var e={size:200,value:void 0,cap:"butt",thick:6,type:"full",foregroundColor:"rgba(0, 150, 136, 1)",backgroundColor:"rgba(0, 0, 0, 0.1)",duration:1500};this.setOptions=function(i){if(!i||!t.isObject(i))throw new Error("Invalid option type specified in the ngGaugeProvider");e=t.merge(e,i)};var i={getOptions:function(){return t.extend({},e)}};this.$get=function(){return i}}function i(e){var i='<div style="display:inline-block;text-align:center;position:relative;"><span><u>{{prepend}}</u>{{value}}<u>{{append}}</u></span><b>{{label}}</b><canvas></canvas></div>',n=function(t,e){this.element=t.find("canvas")[0],this.text=t.find("span"),this.legend=t.find("b"),this.unit=t.find("u"),this.context=this.element.getContext("2d"),this.options=e,this.init()};return n.prototype={init:function(){this.setupStyles(),this.create()},setupStyles:function(){this.context.canvas.width=this.options.size,this.context.canvas.height=this.options.size,this.context.lineCap=this.options.cap,this.context.lineWidth=this.options.thick;var t=.22*this.options.size,e=this.options.size;this.text.css({display:"inline-block",fontWeight:"normal",width:"100%",position:"absolute",textAlign:"center",overflow:"hidden",textOverflow:"ellipsis",fontSize:t+"px",lineHeight:e+"px"}),this.unit.css({textDecoration:"none",fontSize:"0.6em",fontWeight:200,opacity:.8});var i=this.options.size/13,n=5*i+parseInt(this.options.size);this.legend.css({display:"inline-block",width:"100%",position:"absolute",textAlign:"center",overflow:"hidden",textOverflow:"ellipsis",fontWeight:"normal",fontSize:i+"px",lineHeight:n+"px"})},create:function(){function t(o){var o=o||(new Date).getTime(),s=o-i,a=s/r;a=Math.min(a,1),n.drawShell(u,u+h*a,l),s<r?e=window.requestAnimationFrame(function(e){t(e)}):cancelAnimationFrame(e)}var e,i,n=this,o=this.getType(),s=this.getBounds(o),r=this.getDuration(),a=this.clamp(this.getValue(),0,100),u=s.head,c=(s.tail-s.head)/100,h=c*a,l=s.tail;requestAnimationFrame(function(e){i=e||(new Date).getTime(),t(e)})},getBounds:function(t){var e,i;return"semi"==t?(e=Math.PI,i=2*Math.PI):"full"==t?(e=1.5*Math.PI,i=3.5*Math.PI):"arch"===t&&(e=.8*Math.PI,i=2.2*Math.PI),{head:e,tail:i}},drawShell:function(t,e,i){var n=this.context,o=this.getCenter(),s=this.getRadius(),r=this.getForegroundColor(),a=this.getBackgroundColor();this.clear(),n.beginPath(),n.strokeStyle=a,n.arc(o.x,o.y,s,e,i,!1),n.stroke(),n.beginPath(),n.strokeStyle=r,n.arc(o.x,o.y,s,t,e,!1),n.stroke()},clear:function(){this.context.clearRect(0,0,this.getWidth(),this.getHeight())},update:function(){this.create()},destroy:function(){this.clear()},getRadius:function(){var t=this.getCenter();return t.x-this.getThickness()},getCenter:function(){var t=this.getWidth()/2,e=this.getHeight()/2;return{x:t,y:e}},getValue:function(){var t=0;return this.options.used&&this.options.total?(t=this.options.used/this.options.total*100,this.options.value=this.options.used):t=this.options.value,t},getWidth:function(){return this.context.canvas.width},getHeight:function(){return this.context.canvas.height},getThickness:function(){return this.options.thick},getBackgroundColor:function(){return this.options.backgroundColor},getForegroundColor:function(){return this.options.foregroundColor},getLineCap:function(){return this.options.cap},getType:function(){return this.options.type},getDuration:function(){return this.options.duration},clamp:function(t,e,i){return Math.max(e,Math.min(i,t))}},{restrict:"E",replace:!0,template:i,scope:{append:"@?",backgroundColor:"@?",cap:"@?",foregroundColor:"@?",label:"@?",prepend:"@?",size:"@?",thick:"@?",type:"@?",duration:"@?",value:"=?",used:"=?",total:"=?"},link:function(i,o){function s(e,i){u&&e&&!t.equals(e,i)&&u.update()}function r(e,i){u&&e&&!t.equals(e,i)&&(u.destroy(),u.init())}var a=e.getOptions();i.value=t.isDefined(i.value)?i.value:a.value,i.size=t.isDefined(i.size)?i.size:a.size,i.cap=t.isDefined(i.cap)?i.cap:a.cap,i.thick=t.isDefined(i.thick)?i.thick:a.thick,i.type=t.isDefined(i.type)?i.type:a.type,i.duration=t.isDefined(i.duration)?i.duration:a.duration,i.foregroundColor=t.isDefined(i.foregroundColor)?i.foregroundColor:a.foregroundColor,i.backgroundColor=t.isDefined(i.backgroundColor)?i.backgroundColor:a.backgroundColor;var u=new n(o,i);i.$watch("value",s,!1),i.$watch("used",s,!1),i.$watch("total",s,!1),i.$watch("cap",r,!1),i.$watch("thick",r,!1),i.$watch("type",r,!1),i.$watch("size",r,!1),i.$watch("duration",r,!1),i.$watch("foregroundColor",r,!1),i.$watch("backgroundColor",r,!1),i.$on("$destroy",function(){}),i.$on("$resize",function(){})}}}t.module("angularjs-gauge",[]).directive("ngGauge",i).provider("ngGauge",e),e.$inject=[],i.$inject=["ngGauge"]}(angular);
//# sourceMappingURL=angularjs-gauge.min.js.map
